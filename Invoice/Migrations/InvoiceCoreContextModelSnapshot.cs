// <auto-generated />
using System;
using Invoice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invoice.Migrations
{
    [DbContext(typeof(InvoiceCoreContext))]
    partial class InvoiceCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Invoice.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("UomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UomId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Invoice.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderHeaderId");

                    b.HasIndex("UomId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Invoice.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TaxValue")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OrderHeader");
                });

            modelBuilder.Entity("Invoice.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("Invoice.Models.Uom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uom1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UOM");

                    b.HasKey("Id");

                    b.ToTable("UOM");
                });

            modelBuilder.Entity("Invoice.Models.Item", b =>
                {
                    b.HasOne("Invoice.Models.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Item_Store")
                        .IsRequired();

                    b.HasOne("Invoice.Models.Uom", "Uom")
                        .WithMany("Items")
                        .HasForeignKey("UomId")
                        .HasConstraintName("FK_Item_UOM")
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Uom");
                });

            modelBuilder.Entity("Invoice.Models.OrderDetail", b =>
                {
                    b.HasOne("Invoice.Models.Item", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_OrderDetails_Item")
                        .IsRequired();

                    b.HasOne("Invoice.Models.OrderHeader", "OrderHeader")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderHeaderId")
                        .HasConstraintName("FK_OrderDetails_OrderHeader")
                        .IsRequired();

                    b.HasOne("Invoice.Models.Uom", "Uom")
                        .WithMany("OrderDetails")
                        .HasForeignKey("UomId")
                        .HasConstraintName("FK_OrderDetails_UOM")
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderHeader");

                    b.Navigation("Uom");
                });

            modelBuilder.Entity("Invoice.Models.Item", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Invoice.Models.OrderHeader", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Invoice.Models.Store", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Models.Uom", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
